<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title>SciRuby</title>
  <link href="http://sciruby.com/atom.xml" rel="self"/>
  <link href="http://sciruby.com/"/>
  <updated>2012-02-11T18:08:55-06:00</updated>
  <id>http://sciruby.com/</id>
  <author>
    <name>SciRuby</name>
    
  </author>

  
  <entry>
    <title>Numeric Matrix Considerations</title>
    <link href="http://sciruby.com/blog/2012/02/11/numeric-matrix-considerations/"/>
    <updated>2012-02-11T17:35:00-06:00</updated>
    <id>http://sciruby.com/blog/2012/02/11/numeric-matrix-considerations</id>
    <content type="html">&lt;p&gt;Maybe you've been wondering why the SciRuby people have been so quiet lately.&lt;/p&gt;

&lt;p&gt;Mostly, we've been working on &lt;a href=&quot;http://github.com/mohawkjohn/nmatrix&quot;&gt;NMatrix&lt;/a&gt;, which is our prototype linear algebra library, written as a Ruby C extension.&lt;/p&gt;

&lt;p&gt;So far, we have dense and linked-list-of-linked-lists (or just &quot;list&quot;) matrices, which can exist in an essentially unlimited number of dimensions. This week, I implemented the &lt;a href=&quot;https://github.com/mohawkjohn/nmatrix/tree/sparse&quot;&gt;beginnings of a two-dimensional sparse type known as &quot;new Yale.&quot;&lt;/a&gt; If you're curious, check out &lt;em&gt;&lt;a href=&quot;http://apps.nrbook.com/c/index.html&quot;&gt;Numerical Recipes in C&lt;/a&gt;&lt;/em&gt;, pp. 78-79.&lt;/p&gt;

&lt;p&gt;&quot;New Yale&quot; differs from &quot;old Yale&quot; (which SciPy uses for its CSR type) in that the diagonals are accessible in &lt;tt&gt;O(1)&lt;/tt&gt; instead of &lt;tt&gt;O(log(n))&lt;/tt&gt; time. Most libraries for Yale matrices include conditionals that permit both types to be used together (e.g., multiplying a new Yale matrix by an old Yale matrix).&lt;/p&gt;

&lt;p&gt;As I worked through implementation of matrix multiplication for Yale, I realized that matrix libraries are a bottomless pit. One could probably write matrix algorithms forever and still have lots left to do.&lt;/p&gt;

&lt;p&gt;So we need to set ourselves some limits.&lt;/p&gt;

&lt;p&gt;It's not just whether the diagonal is extracted from the rest of the matrix. It's also whether you want to be able to multiply integer-valued matrices by real-valued matrices without an expensive copy operation. It's whether you want to be able to multiply dense against Yale matrices or two Yale and list matrices that have different dtypes, or have separate storage for symmetric matrices, and so on.&lt;/p&gt;

&lt;p&gt;Some of this can be templated using generators. But the complexity begins to grow to the point where it's infeasible to test everything you've implemented. (You also start to get lost in a magical world of function pointers, which is yet another concern.)&lt;/p&gt;

&lt;p&gt;So, again, we need to set ourselves some limits.&lt;/p&gt;

&lt;p&gt;Where those limits might be, however, I know not. Weigh in on the Google Group, in the comments, or on &lt;a href=&quot;https://plus.google.com/109304769076178160953/posts&quot;&gt;our Google+ page&lt;/a&gt;!&lt;/p&gt;
</content>
  </entry>
  
  <entry>
    <title>First Pre-alpha Release</title>
    <link href="http://sciruby.com/blog/2011/11/02/first-pre-alpha-release/"/>
    <updated>2011-11-02T21:39:00-05:00</updated>
    <id>http://sciruby.com/blog/2011/11/02/first-pre-alpha-release</id>
    <content type="html">&lt;p&gt;&lt;a href=&quot;http://news.ycombinator.com/item?id=3180369&quot;&gt;We made it to the top spot on Hacker News&lt;/a&gt; on Halloween (three days ago now). We weren't quite prepared for the level of interest generated by that posting, so we've experienced a few growing pains. (Please please please don't send us to Slashdot.)&lt;/p&gt;

&lt;p&gt;But growing pains are a good thing! They are, of course, the result of growth -- which we like!&lt;/p&gt;

&lt;p&gt;We've had experienced Ruby developers coming out of the woodwork and admitting -- albeit only after looking over their shoulders -- that they, too, have secretly been using Ruby for science, and are thrilled about this project.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/noahhl&quot;&gt;Noah&lt;/a&gt; from 37signals offered an extremely helpful piece of advice. He pointed out the way &lt;a href=&quot;http://github.com/antirez/redis&quot;&gt;redis&lt;/a&gt; uses its &lt;a href=&quot;https://github.com/antirez/redis/issues?state=open&quot;&gt;issue tracker&lt;/a&gt; to facilitate contributions from people who aren't as familiar with the project status. So now if you want to get involved, instead of checking the Roadmap, you should check the &lt;a href=&quot;https://github.com/sciruby/sciruby/issues?sort=created&amp;amp;direction=desc&amp;amp;state=open&quot;&gt;SciRuby issue tracker&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;We had a couple of people who indicated confusion over what features had already been implemented in SciRuby. The source of the confusion was most likely that we hadn't released a gem in a while, but had still been updating the master branch in the repository.&lt;/p&gt;

&lt;p&gt;Our plan had been to wait until we had numeric array and matrix support ready before releasing another gem version. But we capitulated, and have now put out a &quot;pre-alpha,&quot; version 0.1.3, available through your friendly neighborhood RubyGems. As of this posting, the v0.1.3 tag corresponds to the code in master.&lt;/p&gt;

&lt;h2&gt;Features&lt;/h2&gt;

&lt;h3&gt;Plotter GUI&lt;/h3&gt;


&lt;p&gt;The most useful feature is probably Plotter, which is a GUI for Rubyvis. You can instantiate it in a couple of different ways. I prefer this one:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sciruby-plotter my_test_plot.rb
&lt;/code&gt;&lt;/pre&gt;


&lt;p&gt;You can modify your source file and the plotter should automatically update the plot. If you want to save your plot, push the 's' key.&lt;/p&gt;

&lt;p&gt;Similar to the plotter is a basic Rubyvis code editor. You can instantiate it from irb by calling &lt;code&gt;SciRuby::Editor.new&lt;/code&gt;.&lt;/p&gt;

&lt;h3&gt;Datasets&lt;/h3&gt;


&lt;p&gt;We thought it would be super cool if SciRuby could be used for a lot of those examples people used to write for R. You know, R has all those cool datasets, like &lt;a href=&quot;http://stat.ethz.ch/R-manual/R-patched/library/datasets/html/faithful.html&quot;&gt;Old Faithful's eruption times&lt;/a&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;faithful = SciRuby::dataset(:r, 'faithful')
&lt;/code&gt;&lt;/pre&gt;


&lt;p&gt;You might be wondering, &quot;Why do you have to indicate that it comes from R if it only loads R datasets?&quot; Wonder no more.&lt;/p&gt;

&lt;p&gt;I wrote a module for searching online databases for useful datasets as well. It's very buggy. Right now it only works on the &lt;a href=&quot;http://www.guardian.co.uk/world-government-data&quot;&gt;Guardian World Government Data repository&lt;/a&gt;, which is itself somewhat flaky. In other words, this feature might get removed unless some people express an interest in improving it.&lt;/p&gt;

&lt;h3&gt;Statistical Analysis DSL&lt;/h3&gt;


&lt;p&gt;Claudio Bustos' &lt;a href=&quot;http://ruby-statsample.rubyforge.org/statsample/Statsample/Analysis.html&quot;&gt;Statsample::Analysis&lt;/a&gt; has been migrated into SciRuby. It should eventually ease the transition to SciRuby for those who are familiar with R.&lt;/p&gt;

&lt;p&gt;It should work almost exactly the same way as the version from Statsample, but you'll call it with &lt;code&gt;SciRuby::Analysis&lt;/code&gt; instead of &lt;code&gt;Statsample::Analysis&lt;/code&gt;.&lt;/p&gt;

&lt;h2&gt;Installation&lt;/h2&gt;

&lt;p&gt;As always, if you want to install SciRuby, you should look at the &lt;a href=&quot;http://sciruby.com/docs#installation&quot;&gt;installation instructions&lt;/a&gt;.&lt;/p&gt;
</content>
  </entry>
  
  <entry>
    <title>Interview with the SciRuby Team</title>
    <link href="http://sciruby.com/blog/2011/08/17/interview-with-the-sciruby-team/"/>
    <updated>2011-08-17T21:59:00-05:00</updated>
    <id>http://sciruby.com/blog/2011/08/17/interview-with-the-sciruby-team</id>
    <content type="html">&lt;p&gt;We just had an interview published today over at &lt;a href=&quot;http://www.floss4science.com/interview-sciruby-team/&quot;&gt;Floss for Science&lt;/a&gt;,
 and we're super excited because it's our very first media coverage.&lt;/p&gt;

&lt;p&gt;If you want to vote it up at &lt;a href=&quot;http://www.reddit.com&quot;&gt;reddit&lt;/a&gt;, that would be outstanding &amp;emdash; or share it however you
 like to share things. Here are the links:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.reddit.com/r/programming/comments/jlh19/interview_sciruby_team/&quot;&gt;/r/programming&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.reddit.com/r/ruby/comments/jlkur/interview_sciruby_team/&quot;&gt;r/ruby&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Already we've had a bunch of new people joining us on IRC (#sciruby on Freenode) and in our
 &lt;a href=&quot;http://groups.google.com/group/sciruby-dev&quot;&gt;Google Group&lt;/a&gt;. Thanks for all your support!&lt;/p&gt;
</content>
  </entry>
  
  <entry>
    <title>The Challenges of Copyrights</title>
    <link href="http://sciruby.com/blog/2011/08/15/the-challenges-of-copyrights/"/>
    <updated>2011-08-15T19:56:00-05:00</updated>
    <id>http://sciruby.com/blog/2011/08/15/the-challenges-of-copyrights</id>
    <content type="html">&lt;p&gt;Last week, I thought it would be fun to translate some of the &lt;em&gt;&lt;a href=&quot;http://nr.com/&quot;&gt;Numerical Recipes&lt;/a&gt;&lt;/em&gt; algorithms into Ruby,
 specifically those for the Gamma distribution and incomplete gamma function. I got them all working pretty well, and
 they were only a hundred or so lines of code altogether.&lt;/p&gt;

&lt;p&gt;But a voice in the back of my head said, &quot;Hey, you should ask Bill Press if he wants to be involved.&quot;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/William_H._Press&quot;&gt;Bill Press&lt;/a&gt;, by the way, is a pretty cool astrophysicist who decided he
 wanted to come work here at UT as a computational biologist instead. He also happens to be first author on &lt;em&gt;Numerical
 Recipes&lt;/em&gt;, and a fairly regular attendee at my lab's weekly meetings. Once he had to pause my exam to take a call
 from the White House, which was also pretty awesome.&lt;/p&gt;

&lt;p&gt;So I emailed Dr. Press to ask him if he'd be interested in helping out with SciRuby, and specifically if he might be
 willing to donate a copy of NR. He was happy to donate a copy and to help out in whatever way he could, he wrote back,
 but the license for NR wouldn't allow us to use the code from the book.&lt;/p&gt;

&lt;p&gt;My stomach sank. I had missed that disclaimer, and I was used to dealing with more-or-less public domain (or at least
 GPLed) Ruby code.&lt;/p&gt;

&lt;p&gt;The email continued. We should be careful using other libraries, because many of them were illegally derived from
 copyrighted materials.&lt;/p&gt;

&lt;p&gt;Several interesting discussions ensued (&lt;a href=&quot;https://plus.google.com/108379995018215027591/posts/2AefG8i3nUX&quot;&gt;including this public one&lt;/a&gt;).
 The take-away is that many people don't understand code copyrights (I among them). Consequently, most governments don't
 understand copyrights (and it doesn't help that U.S. Congress isn't exactly full of programmers).&lt;/p&gt;

&lt;p&gt;Some were critical of Press and his coauthors for not simply giving us special permission to use his code, but such a
 gimme would be complicated for NR. If they permitted us to use NR code in SciRuby, that code would then be available to
 anyone else to use under the terms of the GPL. I imagine his publisher would be less than thrilled.&lt;/p&gt;

&lt;p&gt;So here are some general guidelines for those who want to contribute code to an open-source scientific project,
 particularly SciRuby. Please keep in mind that I am not a lawyer, and take any of this with a grain of salt.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;If in doubt, check with the author.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Do unto others as you would have them do unto you. In other words, honor closed source licenses if you wish your open
source license to be honored.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;em&gt;Always cite your sources.&lt;/em&gt; If a copyright owner discovers apparently derivative code without a citation, it's easy
to him or her to assume you plagiarized it directly from his or her work. If it has a citation, someone else gets the
blame, or the copyright owner can determine that the code is only &lt;em&gt;apparently&lt;/em&gt;, but not &lt;em&gt;actually&lt;/em&gt;, derivative.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;If you write your own code, derived from your own math, document it. Scan your derivation and make it public (send it
to our Google Group, for example).&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Any more words of wisdom? Stick them in the comments.&lt;/p&gt;
</content>
  </entry>
  
  <entry>
    <title>First Post!</title>
    <link href="http://sciruby.com/blog/2011/08/15/first-post/"/>
    <updated>2011-08-15T19:50:00-05:00</updated>
    <id>http://sciruby.com/blog/2011/08/15/first-post</id>
    <content type="html">&lt;p&gt;I thought I'd start by introducing myself. I'm the project director for SciRuby, and I'm a molecular biology doctoral
 student at the University of Texas. I work in the &lt;a href=&quot;http://marcottelab.org/&quot;&gt;Marcotte Lab&lt;/a&gt;, and actually occupy the
 former desk (and lab hostname) of John Prince, another of the SciRuby project leads.&lt;/p&gt;

&lt;p&gt;In addition to working as a graduate student, I am a blogger and an offline political activist -- specifically, a
 community organizer. While I have contributed code to SciRuby already, and plan to continue, my main role here derives
 from my community organizing experience: &lt;strong&gt;I want &lt;em&gt;you&lt;/em&gt; to get involved.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;In that vein, I have written &lt;a href=&quot;http://sciruby.com/blog/2011/08/15/the-challenges-of-copyrights/&quot;&gt;a fascinating (and humble) precautionary tale&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Oh, and if do you want to get involved, you can find us in #sciruby (Freenode.net), or you can come check out our
&lt;a href=&quot;http://groups.google.com/group/sciruby-dev&quot;&gt;Google Group&lt;/a&gt;.&lt;/p&gt;
</content>
  </entry>
  
</feed>
